name: release

on:
  push:
    branches: [prod, stage, main]

jobs:
  cut_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set branch
        run: |
          echo "BRANCH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
      - name: Set env
        run: |
          if [[ "${BRANCH}" = "main" ]]
          then
            echo "CLUTCH_ENV=test" >> $GITHUB_ENV
          else
            echo "CLUTCH_ENV=$(echo ${BRANCH})" >> $GITHUB_ENV
          fi;
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.17"
      - name: Install dependencies
        run: npm ci
      - name: Release environment
        run: npx semantic-release;
      - name: Clean up branch
        run: |
          if [[ "${BRANCH}" == "prod" ]]
          then
            RELEASE_DOCS=git rev-parse HEAD;
            git checkout main;
            git merge prod;
            git push;
          fi;
          if [[ "${BRANCH}" != "main" ]]
          then
            git checkout main;
            git branch -D ${CLUTCH_ENV};
            git push origin --delete ${CLUTCH_ENV};
          fi;

  deploy:
    runs-on: ubuntu-latest
    needs: [cut_release]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set branch
        run: |
          echo "BRANCH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
      - name: Set env
        run: |
          if [[ "${BRANCH}" = "main" ]]
          then
            echo "CLUTCH_ENV=test" >> $GITHUB_ENV
          else
            echo "CLUTCH_ENV=$(echo ${BRANCH})" >> $GITHUB_ENV
          fi;
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Get latest tag
        run: |
          TAG_VERSION=$(git tag -l "${CLUTCH_ENV}*" --sort=-v:refname |head -n 1);
          echo "Checkout tag: ${TAG_VERSION}";
          git checkout tags/${TAG_VERSION};
      - name: Deploy to environment
        run: |
          echo deploying to ${CLUTCH_ENV};

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
